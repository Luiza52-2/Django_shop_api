from rest_framework import serializers
from django.contrib.auth.models import User
from rest_framework.exceptions import ValidationError


# üîπ –ë–∞–∑–æ–≤—ã–π —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä —Å username –∏ password
class UserBaseSerializer(serializers.Serializer):
    username = serializers.CharField(max_length=150)
    password = serializers.CharField(write_only=True)


# üîπ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è ‚Äî –ø—Ä–æ—Å—Ç–æ –±–∞–∑–æ–≤—ã–π —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä
class UserAuthSerializer(UserBaseSerializer):
    pass


# üîπ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ‚Äî –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π
class UserRegisterSerializer(UserBaseSerializer):
    def validate_username(self, username):
        if User.objects.filter(username=username).exists():
            raise ValidationError('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.')
        return username


# üîπ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ ‚Äî –ø—Ä–∏–Ω–∏–º–∞–µ—Ç username –∏ 6-–∑–Ω–∞—á–Ω—ã–π –∫–æ–¥
class UserConfirmationSerializer(serializers.Serializer):
    username = serializers.CharField(max_length=150)
    code = serializers.CharField(max_length=6)
